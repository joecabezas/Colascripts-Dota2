/////////////////
//enable console
/////////////////
con_enable 1

/////////////////////////////////////
//Right-click to deny creeps
//
//The trade-off with this command is
//that it will no longer be possible
//to right click an ally to follow
//and instead will have to m-click
//them
/////////////////////////////////////
dota_force_right_click_attack 1

///////////////////
//Killcams (def 0)
///////////////////
dota_killcam_show 1

//Health
dota_health_per_vertical_marker 250 	//Health segmenting in the lifebar	(def 250)
dota_health_marker_major_alpha 255		//Opacity major healthbar divider	(def 255, 0=invisible 255=opaque)
dota_health_marker_minor_alpha 128		// Opacity minor healthbar divider	(def 128, 0=invisible 255=opaque)

dota_hud_healthbar_number 1			// Health number above the lifebar on		(def 1)
dota_screen_shake 1					// Screen shake on certain spell effects	(def 1)

dota_minimap_ping_duration 5		//Sets the number of seconds that a ping will stay on the minimap (def 3)
dota_disable_range_finder 0 		// Visual spell range indicator activated 	(def 1)
dota_minimap_hero_size 820 			// Slightly bigger hero icons on minimap 	(def 600)
dota_minimap_misclick_time 0.4	 	// Threshold delay to accept minimap clicks 	(def 0.2)
dota_camera_accelerate 15	 		// Decelerating map scroll 			(50 = insta stop, 1 = smooth slowdown, vanilla DotA would be 50)
dota_player_multipler_orders 0		// Control all units with CTRL click 		(def 0)	
dota_player_units_auto_attack 0		// Hero autoattack disabled 			(def 1)
dota_camera_speed 3500				// Scrolling speed 				(vanilla DotA-like is 6500, def 3000)
dota_camera_disable_zoom 1			// Disables mousewheel zoom			(def 1)
dota_unit_fly_bonus_height 10		// Flying height of air units			(def 150)
dota_reset_camera_on_spawn 0		// Center screen on hero after respawn		(def 1)
dota_always_show_player_names 1		// Always show player names
dota_ability_quick_cast 1			// Doubletapping to selfcast
//dota_unit_multiple_selection 1		// ???


//Fade time on visual effects on doing or receiving damage reduced to half duration
dota_health_hurt_decay_time_max 0.4		// (def 0.8)
dota_health_hurt_decay_time_min 0.15	// (def 0.3)
dota_health_hurt_delay 0.05				// (def 0.1)
dota_pain_decay 0.4						// (def 0.8)
dota_pain_factor 1.5					// (def 3)
dota_pain_fade_rate 1.5					// (def 3)
dota_pain_multiplier 0.4				// (def 0.8)

////////
//Sound
////////
volume 1				// Full sound volume, here you can setup for teamspeak
snd_musicvolume 0.8		// Ingame music volume (Min "0" Max "1.0")

//Performance
fps_max 60 					// Max FPS for client to render					(def 120)
mat_vsync 1 				// VSYNC on/off							(0 Disables, 1 Enables)
mat_triplebuffered 1		// Enable with vsync if fps is less than 60			(0 Disables, 1 Enables)
engine_no_focus_sleep 0		// Run Dota 2 at full fps when tabbed out			(def 1)

//???
//chat_join "customchannel"		// Join chat channel

////////////////////
//Netgraph settings
////////////////////
net_graphinsetbottom 436		// Position from bottom edge. Put "55" for 1280x800	(def 0)
net_graphinsetright -68			// Position from right edge. Put "-100" for 1280x800	(def 0)
net_graphproportionalfont 0		// Makes net_graph text smaller 			(def 1)
net_graph 1						// Enables the Net_Graph				(def 0)


//////////////////////////////////////////
//Network
//
//You should adjust cl_interp to your
//average ping to reach a stable and
//white-letter "lerp" value in the
//net_graph which is similar to your
//ping or about 10-20ms higher.
//An orange/red/yellowish colored or
//blinking lerp value means it is not
//correctly set up.
//////////////////////////////////////////

//cl_interp "0.033"			//Set this to your average ping divided by 1000. Ping 80 would be cl_interp 0.08	(def 0.055, Min 0.033)

//cl_interp_ratio "2"		// Multiplies final result of cl_interp							(def 2)
//cl_smoothtime "0.01"		// When errors occur smooth display over X time, 0 Disables				(def 0.1)
//rate "80000"				// Total amount of bandwidth Dota 2 may use						(def 80000)
//cl_updaterate "40"		// Amount of updates recieved from server per second 					(def 40)
//cl_cmdrate "40"			// Amount of updates sent to server per second 						(def 40)